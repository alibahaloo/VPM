@page
@model VPM.Pages.Reservations.CreateModel

@{
    ViewData["Title"] = "Reservation | Create";
}

<script type="text/javascript">
    // Function to set the Max value for allowed reservation per unit Input.
    function setDate() {
        var today = new Date();
        
        var input = document.getElementById("Reservation_Date");
        input.value = today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);

        var timeInput = document.getElementById("Reservation_StartTime");
        timeInput.value = today.getHours() + ':' + today.getMinutes();
    }

    // Registering the function to run at page load
    window.onload = function() {
        setDate();
    };
</script>

<h1>Create Reservation</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div class="form-group">
                <label asp-for="Reservation.VehiclePlateNumber" class="control-label"></label>
                <input asp-for="Reservation.VehiclePlateNumber" class="form-control" />
                <span asp-validation-for="Reservation.VehiclePlateNumber" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-7 form-group">
                    <label asp-for="Reservation.Date" class="control-label"></label>
                    <input asp-for="Reservation.Date" class="form-control" onload="setDate()" />
                    <span asp-validation-for="Reservation.Date" class="text-danger"></span>
                </div>
                <div class="col-md-5 form-group">
                    <label asp-for="Reservation.StartTime" class="control-label"></label>
                    <input asp-for="Reservation.StartTime" class="form-control" step="@Model.Building.StartTimeStep" />
                    <span asp-validation-for="Reservation.StartTime" class="text-danger"></span>
                </div>
            </div>

            <h6>Duration</h6>

            <div class="row">
                <div class="col-md-4 form-group">
                    <label asp-for="Reservation.DurationHour" class="control-label"></label>
                    <input asp-for="Reservation.DurationHour" class="form-control" max="@Model.Building.AllowedReservationLength" min="1" step="1" value="1" />
                    <span asp-validation-for="Reservation.DurationHour" class="text-danger"></span>
                </div>
                @*CHECK IF Building.ReservationInterval IS FH -> HIDE MINUES INPUT*@
                @if (Model.Building.ReservationInterval != Data.Entities.AllowedReservationIntervals.FH)
                {
                    <div class="col-md-4 form-group">
                        <label asp-for="Reservation.DurationMin" class="control-label"></label>
                        <input asp-for="Reservation.DurationMin" class="form-control" min="1" max="@Model.Building.MinuteMaxLength" step="@Model.Building.MinuteStep" value="1" />
                        <span asp-validation-for="Reservation.DurationMin" class="text-danger"></span>
                    </div>
                }
            </div>

            <hr />

            <div class="form-group">
                <input type="submit" value="Submit" class="btn btn-primary" /> |
                <a asp-page="./Index">
                    <input type="button" value="Back to List" class="btn btn-dark" />
                </a>
            </div>
        </form>
    </div>
    <div class="col-md-8">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        @await Component.InvokeAsync("WeeklyCalendar", new { Building = Model.Building })
    </div>
</div>

@section Scripts {
    @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}
