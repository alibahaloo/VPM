@page
@model VPM.Pages.Buildings.DetailsModel
@using VPM.Areas.Identity
@using VPM.Pages.Shared.Components.ReservationFilter
@{
    ViewData["Title"] = "Building | Details";
}

<h1>Building Details</h1>
<hr />

<div class="row">
    <div class="col-md-4">
        <dl class="row">
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.Building.Name)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.Building.Name)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.Building.Address)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.Building.Address)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.Building.IsActive)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.Building.IsActive)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.Building.VisitorParkingCount)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.Building.VisitorParkingCount)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.Building.AllowedReservationPerUnit)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.Building.AllowedReservationPerUnit)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.Building.AllowedReservationLength)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.Building.AllowedReservationLength)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.Building.ReservationInterval)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.Building.ReservationInterval)
            </dd>
            <dt class="col-sm-6">
                @Html.DisplayNameFor(model => model.Building.Created)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.Building.Created)
            </dd>
            <dd class="col-sm-12">
                <hr />
                @{
                    if (User.IsInRole("Admin"))
                    {
                        <a asp-page="./Edit" asp-route-id="@Model.Building.Id">
                            <input type="button" value="Edit" class="btn btn-warning" /> |
                        </a>

                        <a asp-page="./Index">
                            <input type="button" value="Back to List" class="btn btn-dark" />
                        </a>
                    }
                    else if (User.IsInRole("Manager"))
                    {
                        <a asp-page="./Edit" asp-route-id="@Model.Building.Id">
                            |
                            <input type="button" value="Edit" class="btn btn-warning" />
                        </a>
                    }
                    else
                    {
                        <a asp-page="../Index">
                            <input type="button" value="Back to Home" class="btn btn-dark" />
                        </a>
                    }
                }
            </dd>
        </dl>
    </div>
    <div class="col-md-8">
        @await Component.InvokeAsync("WeeklyView", new { Building = Model.Building })
    </div>
</div>
<hr />
@if (User.IsInRole("Admin") || User.IsInRole("Manager"))
{
    AvailableInputs availableInputs = new AvailableInputs { ByValidity = true, ByUnit = true, ByBuilding = false, ByVehiclePlateNumber = true };

    //Setting Query.BuildingId as Building since Building is binded
    //Model.Query.BuildingId = Model.Building.Id;
    //The rest of the properties are set within the component so no need to set them here
    @await Component.InvokeAsync("ReservationFilter", new { Query = Model.Query, AvailableInputs = availableInputs })
}
<hr />
<h3>Resevations</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Reservations[0].VehiclePlateNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reservations[0].StartTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reservations[0].EndTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reservations[0].ApplicationUser.Unit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reservations[0].ApplicationUser)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Reservations)
        {
            string expired = item.EndTime <= DateTime.Now ? "style=background-color:#ff8800;" : "";
            <tr @expired>
                <td>
                    @Html.DisplayFor(modelItem => item.VehiclePlateNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndTime)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ApplicationUser.Unit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ApplicationUser.FullName)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
